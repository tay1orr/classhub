const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function cleanCorruptedPosts() {
  try {
    // Ïù∏ÏΩîÎî©Ïù¥ Íπ®ÏßÑ Í≤åÏãúÍ∏Ä IDÎì§
    const corruptedPostIds = [
      'cmfdwu7o60009n3qtw84hbh1q', // ÔøΩ◊ΩÔøΩ∆Æ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ‘Ω√±ÔøΩ
      'cmfdu6eh30007n3qtjiw80ehb', // ÔøΩﬂæÔøΩ ÔøΩ◊ΩÔøΩ∆Æ
      'cmfdu5i340005n3qtx9nloscm', // ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ◊ΩÔøΩ∆Æ
      'cmfdtrtxm0003n3qt6mtfsuh6', // ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ◊ΩÔøΩ∆Æ
      'cmfdw6ntu0001wvegqc0kx58o'  // asfas (ÏûÑÏãú ÌÖåÏä§Ìä∏)
    ];
    
    console.log('Ïù∏ÏΩîÎî©Ïù¥ Íπ®ÏßÑ Í≤åÏãúÍ∏ÄÎì§ÏùÑ ÏÇ≠Ï†úÌï©ÎãàÎã§...');
    
    for (const postId of corruptedPostIds) {
      try {
        // Î®ºÏ†Ä Í≤åÏãúÍ∏ÄÏù¥ Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏
        const post = await prisma.post.findUnique({
          where: { id: postId },
          select: { id: true, title: true }
        });
        
        if (post) {
          console.log(`ÏÇ≠Ï†ú Ï§ë: ${post.id} - ${post.title}`);
          
          // Í¥ÄÎ†® ÎåìÍ∏ÄÎì§ ÏÇ≠Ï†ú
          await prisma.comment.deleteMany({
            where: { postId: postId }
          });
          
          // Ï¢ãÏïÑÏöî/Ïã´Ïñ¥Ïöî Í∏∞Î°ù ÏÇ≠Ï†ú
          await prisma.postLike.deleteMany({
            where: { postId: postId }
          });
          
          // Í≤åÏãúÍ∏Ä ÏÇ≠Ï†ú
          await prisma.post.delete({
            where: { id: postId }
          });
          
          console.log(`‚úÖ ÏÇ≠Ï†ú ÏôÑÎ£å: ${postId}`);
        } else {
          console.log(`‚ùå Í≤åÏãúÍ∏ÄÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏùå: ${postId}`);
        }
      } catch (error) {
        console.error(`‚ùå ${postId} ÏÇ≠Ï†ú Ïã§Ìå®:`, error.message);
      }
    }
    
    console.log('\nüéâ Î™®Îì† Ïù∏ÏΩîÎî© Íπ®ÏßÑ Í≤åÏãúÍ∏Ä Ï†ïÎ¶¨ ÏôÑÎ£å!');
    
    // ÎÇ®ÏùÄ Í≤åÏãúÍ∏Ä ÌôïÏù∏
    const remainingPosts = await prisma.post.findMany({
      select: {
        id: true,
        title: true,
        board: {
          select: { name: true }
        }
      }
    });
    
    console.log('\nüìã ÌòÑÏû¨ ÎÇ®ÏùÄ Í≤åÏãúÍ∏ÄÎì§:');
    remainingPosts.forEach(post => {
      console.log(`  - [${post.board.name}] ${post.title}`);
    });
    
  } catch (error) {
    console.error('‚ùå Ï†ÑÏ≤¥Ï†ÅÏù∏ Ïò§Î•ò:', error);
  } finally {
    await prisma.$disconnect();
  }
}

cleanCorruptedPosts();